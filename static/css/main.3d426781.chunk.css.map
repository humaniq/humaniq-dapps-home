{"version":3,"sources":["main.3d426781.chunk.css","webpack://src/screens/home/Home.sass","webpack://src/index.sass","webpack://src/styles/colors.sass","webpack://src/styles/mq.sass","webpack://src/components/dialogs/styles.sass","webpack://src/components/header/index.sass","webpack://src/components/autocomplete/index.sass","webpack://src/components/explore-dapps/index.sass","webpack://src/components/explore-dapps/DappCategory.sass","webpack://src/components/network-switcher/index.sass","webpack://src/styles/reset.sass","webpack://src/App.sass","webpack://src/components/dapp/index.sass","webpack://src/components/navbar/index.sass","webpack://src/styles/global.sass","webpack://src/screens/category/index.sass"],"names":[],"mappings":"AAAA,0FAA0F,CCE1F,iBCDE,YAAA,CACA,QDOA,CAPF,WACE,WAAA,CAGA,sBAAA,CACA,kBENiB,CFOjB,iBAAA,CACA,YAAA,CACA,iBACE,YAAA,CACA,iBAAA,CACA,WAAA,CACA,qBAAA,CG0MA,0BH9MF,iBAMI,UAAA,CAAA,CACJ,gBACE,iBAAA,CACA,WAAA,CACA,WAAA,CGoMA,0BHvMF,gBAKI,uBAAA,CAAA,CACJ,kBACE,kBAAA,CACA,iBAAA,CACA,WAAA,CACA,WAAA,CG6LA,0BHjMF,kBAMI,uBAAA,CAAA,CACN,kBAEE,iBAAA,CAyBA,iCAIE,sBAAA,CI3DJ,kBACE,wBFFiB,CEGjB,sBAAA,CACA,YAAA,CACA,qBAAA,CACA,0BACE,cAAA,CACA,eAAA,CACF,+BACE,cAAA,CACA,gBAAA,CACA,sCACE,cAAA,CACA,gBAAA,CACJ,yBACE,gBAAA,CACA,gCACE,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,kBAAA,CACA,YAAA,CACA,cAAA,CACA,cAAA,CACA,wCACE,UAAA,CACA,WAAA,CACA,wBFtBE,CEuBJ,qCACE,iBAAA,CACA,cAAA,CACA,eAAA,CACN,iCACE,gBAAA,CACA,YAAA,CACA,QAAA,CACA,wBAAA,CACA,qBAAA,CACA,qDACE,gBAAA,CCzCN,QACI,SAAA,CACA,YAAA,CACA,YAAA,CACA,iBAAA,CACA,kBAAA,CACA,sBAAA,CACA,iBAAA,CACA,gBACI,YAAA,CACA,UAAA,CACA,eAAA,CACJ,kBACI,4BAAA,CACA,iBAAA,CACA,WAAA,CACA,iBAAA,CACA,iBAAA,CACA,sBAAA,CACA,eAAA,CCnBR,cACE,cAAA,CACA,WAAA,CACA,eAAA,CACA,mEAAA,CACA,kBAAA,CACA,iBAAA,CACA,kBAAA,CACA,YAAA,CACA,UAAA,CAEF,oBACE,UAAA,CACA,cAAA,CACA,eAAA,CACA,QAAA,CACA,uBAAA,CChBF,eACE,YAAA,CACA,kBAAA,CACA,mBAAA,CACA,cAAA,CAEA,8BACE,YAAA,CACA,iEAAA,CACA,UAAA,CACA,UAAA,CACA,kBAAA,CACA,WAAA,CACA,oBAAA,CAEA,qCAEE,eAAA,CACA,cAAA,CACA,gBAEA,CAEF,gFAPE,UAAA,CAIA,eAAA,CACA,gBAKA,CCxBN,yBACE,YAAA,CACA,SAAA,CACA,aAAA,CAEF,eACE,iBAAA,CACA,YAAA,CACA,QAAA,CACA,kBAAA,CACA,iBAAA,CACA,sBAAA,CACA,UAAA,CACA,WAAA,CACA,qBAAA,CACA,eAAA,CACA,qBAAA,CACA,mEAAA,CAEF,+BACE,kBAAA,CACA,YAAA,CACA,iBAAA,CAEF,uBACE,iBAAA,CACA,QAAA,CACA,UAAA,CACA,aAAA,CACA,cAAA,CACA,eAAA,CAEF,6BACE,cAAA,CAEF,oBACE,cAAA,CACA,gBAAA,CACA,UAAA,CACA,WAAA,CAEF,oBACE,+BAAA,CACA,YAAA,CACA,iBAAA,CACA,eAAA,CACA,cAAA,CACA,aAAA,CACA,gBAAA,CACA,eAAA,CACA,mBAAA,CClDF,oBACE,YAAA,CACA,sBAAA,CACA,eAAA,CACA,cAAA,CACA,eAAA,CACA,yBACE,WAAA,CACA,sBAAA,CACA,wCAAA,CACA,kCACE,aPVO,COWP,+BAAA,CCZN,iBACE,qBAAA,CAEF,sPACE,QAAA,CACA,SAAA,CACA,QAAA,CACA,YAAA,CACA,uBAAA,CACA,iCAAA,CACA,kCAAA,CACA,cAAA,CACA,6BAAA,CAAA,0BAAA,CAAA,qBAAA,CACA,kBAAA,CAGF,kEAEE,uBAAA,CACA,QAAA,CAGF,mBACE,yBAAA,CAGF,+BACE,YAAA,CAEF,KACE,aAAA,CAEF,MACE,eAAA,CAEF,aACE,WAAA,CAEF,oDACE,UAAA,CACA,YAAA,CAEF,MACE,wBAAA,CACA,gBAAA,CAEF,MACE,uBAAA,CACA,eAAA,CACA,UAAA,CR/Ca,KSGb,gBAAA,CACA,aAAA,CACA,kBTRiB,CSSjB,sBAAA,CCPF,WDEE,YAAA,CACA,QCIA,CAPF,MAGE,kBAAA,CACA,0BAAA,CACA,eAAA,CACA,iBAAA,CACA,qBAAA,CAEF,aACE,UAAA,CAEF,WACE,cAAA,CACA,UAAA,CACA,cAAA,CACA,WAAA,CACA,iBAAA,CACA,iBAAA,CAEF,QACE,YAAA,CACA,qBAAA,CAEF,UACE,kBAAA,CACA,QAAA,CAEF,MACE,QAAA,CACA,cAAA,CAEF,QACE,QAAA,CACA,4BAAA,CAEF,iBACE,cAAA,CACA,WAAA,CAEF,WACE,iBAAA,CACA,cAAA,CACA,eAAA,CACA,gBAAA,CACA,kBAAA,CACA,aAAA,CACA,eAAA,CACA,iBAAA,CACA,YAAA,CACA,eAAA,CACA,kBAAA,CACA,sBAAA,CAEF,iBACE,cAAA,CACA,gBAAA,CAEF,OACE,cAAA,CACA,UAAA,CACA,+BAAA,CAAA,uBAAA,CAGF,QACE,gCAAA,CAAA,wBAAA,CAGF,aACE,+BAAA,CAEF,WACE,YAAA,CACA,eAAA,CACA,iBAAA,CACA,eAAA,CACA,cAAA,CACA,gBAAA,CACA,eAAA,CACA,aAAA,CAEF,cACE,SAAA,CAEF,UACE,wBAAA,CACA,iBAAA,CACA,eAAA,CACA,cAAA,CACA,gBAAA,CACA,eAAA,CACA,aV1Fa,CU2Fb,eAAA,CACA,kBAAA,CACA,sBAAA,CACA,aAAA,CAEF,YACE,UAAA,CACA,WAAA,CACA,WAAA,CACA,iBAAA,CACA,OAAA,CACA,iBAAA,CACA,eAAA,CACA,iBAAA,CACA,4BAAA,CACA,aAAA,CACA,sBAAA,CACA,QAAA,CAEF,QACE,sBAAA,CAEF,KACE,YAAA,CACA,kBAAA,CAEF,OACE,kBAAA,CACA,aVvHa,CUwHb,eAAA,CACA,cAAA,CC7HF,QACE,YAAA,CACA,QAAA,CACA,kBAAA,CACA,kBAAA,CACA,kBAAA,CACA,eAAA,CAEF,aACE,0BAAA,CACA,QAAA,CACA,4BAAA,CACA,iBAAA,CACA,eAAA,CAEF,WACE,aAAA,CACA,eAAA,CACA,YAAA,CACA,QAAA,CACA,iBAAA,CACA,cAAA,CACA,gBAAA,CCpBF,oBACE,qCAAA,CACA,sCAAA,CAEF,eACE,kCAAA,CAEF,gBACE,6BAAA,CACA,4BAAA,CACA,wBAAA,CACA,yBAAA,CACA,yBAAA,CACA,2CACE,wBZZW,CYab,sCACE,aZdW,CaFf,oBACE,WAAA,CACA,qBAAA,CZoNE,0BYtNJ,oBAII,UAAA,CAAA,CAEJ,kBACE,gBAAA,CACA,iBAAA,CACA,mBAAA","file":"main.3d426781.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;600&display=swap);\n#root{display:flex;flex:1 1}\n.MuiPaper-elevation{border-top-left-radius:16px !important;border-top-right-radius:16px !important}.MuiAlert-root{border-color:transparent !important}.MuiButton-root{text-transform:none !important;border-radius:12px !important;font-size:16px !important;font-weight:500 !important;box-shadow:none !important}.MuiButton-root.MuiButton-containedPrimary{background-color:#0066da}.MuiButton-root.MuiButton-textPrimary{color:#0066da}.container{height:100%;display:flex;flex:1 1;justify-content:center;background:#f5faff;position:relative;padding:16px}.container .main{display:flex;text-align:center;width:800px;flex-direction:column}@media(max-width: 47.99em){.container .main{width:100%}}.container .btn{position:absolute;bottom:16px;width:800px}@media(max-width: 47.99em){.container .btn{width:calc(100% - 32px)}}.container .btn-2{border-radius:12px;position:absolute;bottom:64px;width:800px}@media(max-width: 47.99em){.container .btn-2{width:calc(100% - 32px)}}.drawer-container{background-color:#f5faff;padding:29px 16px}.drawer-container .tittle{font-size:16px;font-weight:500}.drawer-container .description{font-size:14px;padding-top:16px}.drawer-container .stack{padding-top:16px}.drawer-container .stack .paper{display:flex;flex-direction:row;align-items:center;border-radius:12px;padding:12px;margin-top:8px;cursor:pointer}.drawer-container .stack .paper .avatar{width:44px;height:44px;background-color:#f2f3f6}.drawer-container .stack .paper span{padding-left:12px;font-size:16px;font-weight:500}.drawer-container .btn-container{padding-top:29px;display:flex;flex:1 1;justify-content:center}\n.drawer-container{background-color:#f5faff;padding:29px 16px 16px;display:flex;flex-direction:column}.drawer-container .tittle{font-size:16px;font-weight:500}.drawer-container .description{font-size:14px;padding-top:16px}.drawer-container .description.medium{font-size:16px;padding-top:56px}.drawer-container .stack{padding-top:16px}.drawer-container .stack .paper{display:flex;flex-direction:row;align-items:center;border-radius:12px;padding:12px;margin-top:8px;cursor:pointer}.drawer-container .stack .paper .avatar{width:44px;height:44px;background-color:#f2f3f6}.drawer-container .stack .paper span{padding-left:12px;font-size:16px;font-weight:500}.drawer-container .btn-container{padding-top:29px;display:flex;flex:1 1;justify-content:flex-end;flex-direction:column}.drawer-container .btn-container button:nth-child(2){padding-top:16px}\n.header{z-index:0;height:140px;display:flex;position:relative;align-items:center;justify-content:center;text-align:center}.header .bg-img{height:170px;width:100%;margin-top:85px}.header .logo-img{background-color:transparent;position:absolute;width:170px;z-index:999999999;align-self:center;justify-content:center;margin-top:10px}\n.autocomplete{z-index:999999;height:42px;background:#fff;box-shadow:0px 0px 1px rgba(40,41,61,.04),0px 2px 4px rgba(96,97,112,.16);border-radius:12px;padding-left:16px;padding-right:16px;display:flex;margin:8px}.autocomplete-input{width:100%;font-size:16px;outline-width:0;border:0px;-webkit-appearance:none}\n.explore-dapps{display:flex;flex-direction:row;padding-bottom:18px;flex-wrap:wrap}.explore-dapps .main-category{display:flex;background:linear-gradient(90.72deg, #B2FEAB 1.92%, #76B5FF 99.38%);width:100%;margin:8px;border-radius:12px;padding:8px;text-decoration:none}.explore-dapps .main-category .title{color:#fff;font-weight:500;font-size:16px;line-height:16px;text-align:left;padding-left:6px}.explore-dapps .main-category .description{padding-left:6px;color:#fff;text-align:left}\n.MuiPaper-elevation{border-top-left-radius:16px !important;border-top-right-radius:16px !important}.MuiAlert-root{border-color:transparent !important}.MuiButton-root{text-transform:none !important;border-radius:12px !important;font-size:16px !important;font-weight:500 !important;box-shadow:none !important}.MuiButton-root.MuiButton-containedPrimary{background-color:#0066da}.MuiButton-root.MuiButton-textPrimary{color:#0066da}.dapp-category-container{display:flex;flex:.5 1;min-width:50%}.dapp-category{position:relative;display:flex;flex:1 1;border-radius:12px;text-align:center;align-items:flex-start;margin:8px;padding:8px;flex-direction:column;overflow:hidden;background-color:#fff;box-shadow:0 0 1px rgba(40,41,61,.04),0 2px 4px rgba(96,97,112,.16)}.dapp-category-image-container{background:#f2f3f6;padding:10px;border-radius:50%}.dapp-category-counter{position:absolute;top:10px;right:20px;color:#9b9b9b;font-size:12px;font-weight:bold}.dapp-category:nth-child(even){margin-right:0px}.dapp-category-icon{font-size:32px;line-height:32px;width:32px;height:32px}.dapp-category-name{font-family:\"Roboto\",sans-serif;display:flex;font-style:normal;font-weight:500;font-size:14px;color:#001833;padding-top:10px;text-align:left;letter-spacing:.5px}\n.MuiPaper-elevation{border-top-left-radius:16px !important;border-top-right-radius:16px !important}.MuiAlert-root{border-color:transparent !important}.MuiButton-root{text-transform:none !important;border-radius:12px !important;font-size:16px !important;font-weight:500 !important;box-shadow:none !important}.MuiButton-root.MuiButton-containedPrimary{background-color:#0066da}.MuiButton-root.MuiButton-textPrimary{color:#0066da}.switcher-container{display:flex;justify-content:center;padding-top:8px;font-size:16px;font-weight:500}.switcher-container .col{padding:5px;color:rgba(0,24,51,.2);border-bottom:2px solid rgba(0,24,51,.2)}.switcher-container .col.selected{color:#001833;border-bottom:2px solid #001833}\n*,*:before,*:after{box-sizing:border-box}html,body,div,span,object,iframe,figure,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,code,em,img,small,strike,strong,sub,sup,tt,b,u,i,ol,ul,li,fieldset,form,label,table,caption,tbody,tfoot,thead,tr,th,td,main,canvas,embed,footer,header,nav,section,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;font-size:14px;-webkit-text-size-adjust:none;-moz-text-size-adjust:none;text-size-adjust:none;font-family:Roboto}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}input[type=number]{-moz-appearance:textfield}footer,header,nav,section,main{display:flex}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:\"\";content:none}table{border-collapse:collapse;border-spacing:0}input{-webkit-appearance:none;border-radius:0;width:100%}.MuiPaper-elevation{border-top-left-radius:16px !important;border-top-right-radius:16px !important}.MuiAlert-root{border-color:transparent !important}.MuiButton-root{text-transform:none !important;border-radius:12px !important;font-size:16px !important;font-weight:500 !important;box-shadow:none !important}.MuiButton-root.MuiButton-containedPrimary{background-color:#0066da}.MuiButton-root.MuiButton-textPrimary{color:#0066da}.App{display:flex;flex:1 1;min-height:100vh;overflow:auto;background:#f5faff;justify-content:center}\n.MuiPaper-elevation{border-top-left-radius:16px !important;border-top-right-radius:16px !important}.MuiAlert-root{border-color:transparent !important}.MuiButton-root{text-transform:none !important;border-radius:12px !important;font-size:16px !important;font-weight:500 !important;box-shadow:none !important}.MuiButton-root.MuiButton-containedPrimary{background-color:#0066da}.MuiButton-root.MuiButton-textPrimary{color:#0066da}.dapp{display:flex;flex:1 1;margin-bottom:15px;padding:10px 16px 10px 8px;background:#fff;border-radius:8px;flex-direction:column}.dapp:active{opacity:.5}.dapp-logo{margin-top:2px;width:48px;min-width:48px;height:auto;border-radius:9px;margin-right:16px}.column{display:flex;flex-direction:column}.dapp-row{flex-direction:row;flex:1 1}.grow{flex:1 1;cursor:pointer}.around{flex:1 1;justify-content:space-around}.dapp-logo-small{min-width:32px;height:32px}.dapp-name{font-style:normal;font-size:16px;font-weight:500;line-height:25px;align-items:center;color:#24292e;text-align:left;margin-bottom:3px;margin-top:0px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.dapp-name-small{font-size:16px;line-height:22px}.arrow{cursor:pointer;width:14px;-webkit-transform:rotate(360deg);transform:rotate(360deg)}.rotate{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.dapp-border{border-bottom:1px solid #9b9b9b}.dapp-desc{margin-top:0px;margin-bottom:0px;font-style:normal;font-weight:normal;font-size:12px;line-height:17px;text-align:left;color:#9b9b9b}.dapp-content{width:80%}.dapp-url{font-family:Roboto,serif;font-style:normal;font-weight:normal;font-size:12px;line-height:17px;text-align:left;color:#0066da;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;display:block}.dapp-close{width:16px;height:16px;padding:5px;position:absolute;right:0px;margin-right:17px;margin-top:-5px;text-align:center;background-color:transparent;display:block;box-sizing:content-box;border:0px}.center{justify-content:center}.row{display:flex;flex-direction:row}.title{margin-bottom:10px;color:#0066da;font-weight:500;font-size:12px}\n.navbar{display:flex;flex:1 1;flex-direction:row;margin-bottom:15px;align-items:center;padding-top:5px}.navbar-back{margin:16px 36px 16px 20px;border:0;background-color:transparent;align-self:center;padding-top:3px}.navbar h1{color:#001833;font-weight:500;display:flex;flex:1 1;font-style:normal;font-size:20px;line-height:25px}\n.MuiPaper-elevation{border-top-left-radius:16px !important;border-top-right-radius:16px !important}.MuiAlert-root{border-color:transparent !important}.MuiButton-root{text-transform:none !important;border-radius:12px !important;font-size:16px !important;font-weight:500 !important;box-shadow:none !important}.MuiButton-root.MuiButton-containedPrimary{background-color:#0066da}.MuiButton-root.MuiButton-textPrimary{color:#0066da}.category-container{width:800px;flex-direction:column}@media(max-width: 47.99em){.category-container{width:100%}}.category-wrapper{margin-left:15px;margin-right:15px;padding-bottom:15px}\n","@import \"src/styles/vars\"\r\n\r\n.container\r\n  height: 100%\r\n  display: flex\r\n  flex: 1\r\n  justify-content: center\r\n  background: $background-color\r\n  position: relative\r\n  padding: 16px\r\n  .main\r\n    display: flex\r\n    text-align: center\r\n    width: 800px\r\n    flex-direction: column\r\n    @include mq($until: tablet)\r\n      width: 100%\r\n  .btn\r\n    position: absolute\r\n    bottom: 16px\r\n    width: 800px\r\n    @include mq($until: tablet)\r\n      width: calc(100% - 32px)\r\n  .btn-2\r\n    border-radius: 12px\r\n    position: absolute\r\n    bottom: 64px\r\n    width: 800px\r\n    @include mq($until: tablet)\r\n      width: calc(100% - 32px)\r\n.drawer-container\r\n  background-color: $background-color\r\n  padding: 29px 16px\r\n  .tittle\r\n    font-size: 16px\r\n    font-weight: 500\r\n  .description\r\n    font-size: 14px\r\n    padding-top: 16px\r\n  .stack\r\n    padding-top: 16px\r\n    .paper\r\n      display: flex\r\n      flex-direction: row\r\n      align-items: center\r\n      border-radius: 12px\r\n      padding: 12px\r\n      margin-top: 8px\r\n      cursor: pointer\r\n      .avatar\r\n        width: 44px\r\n        height: 44px\r\n        background-color: $grey-bg\r\n      span\r\n        padding-left: 12px\r\n        font-size: 16px\r\n        font-weight: 500\r\n  .btn-container\r\n    padding-top: 29px\r\n    display: flex\r\n    flex: 1\r\n    justify-content: center","#root\r\n  display: flex\r\n  flex: 1\r\n","$main-color: #85e8ff\r\n$background-color: #F5FAFF\r\n$hover-color: rgb(133 232 255 / 60%)\r\n$black-text: #001833\r\n$blue-primary: #0066DA\r\n$blue-ocean: #001833\r\n$grey-text: #9B9B9B\r\n$grey-bg: #F2F3F6","@charset \"UTF-8\"\r\n\r\n// Fixes an issue where Ruby locale is not set properly\r\n// See https://github.com/sass-mq/sass-mq/pull/10\r\n/// Base font size on the `<body>` element\r\n//\r\n// / Do not override this value, or things will break\r\n//\r\n// / @link https://github.com/sass-mq/sass-mq/issues/122\r\n// / @deprecated This setting will be removed in sass-mq v6.0.0\r\n// / @access private\r\n// / @type Number (unit)\r\n$mq-base-font-size: 16px !default\r\n\r\n/// Responsive mode\r\n//\r\n// / Set to `false` to enable support for browsers that do not support @media queries,\r\n// / (IE <= 8, Firefox <= 3, Opera <= 9)\r\n//\r\n// / You could create a stylesheet served exclusively to older browsers,\r\n// / where @media queries are rasterized\r\n//\r\n// / @example scss\r\n// /  // old-ie.scss\r\n// /  $mq-responsive: false;\r\n// /  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\r\n// /                   // larger breakpoints will be ignored\r\n//\r\n// / @type Boolean\r\n// / @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\r\n$mq-responsive: true !default\r\n\r\n/// Breakpoint list\r\n//\r\n// / Name your breakpoints in a way that creates a ubiquitous language\r\n// / across team members. It will improve communication between\r\n// / stakeholders, designers, developers, and testers.\r\n//\r\n// / @type Map\r\n// / @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\r\n$mq-breakpoints: (mobile: 320px, tablet: 768px, desktop: 980px, wide: 1300px) !default\r\n\r\n/// Static breakpoint (for fixed-width layouts)\r\n//\r\n// / Define the breakpoint from $mq-breakpoints that should\r\n// / be used as the target width for the fixed-width layout\r\n// / (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\r\n//\r\n// / @example scss\r\n// /  // tablet-only.scss\r\n// /  //\r\n// /  // Ignore all styles above tablet breakpoint,\r\n// /  // and fix the styles (such as the layout) at tablet width\r\n// /  $mq-responsive: false;\r\n// /  $mq-static-breakpoint: tablet;\r\n// /  @import 'main'; // @media queries in this file will be rasterized up to tablet\r\n// /                   // larger breakpoints will be ignored\r\n//\r\n// / @type String\r\n// / @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\r\n$mq-static-breakpoint: desktop !default\r\n\r\n/// Show breakpoints in the top right corner\r\n//\r\n// / If you want to display the currently active breakpoint in the top\r\n// / right corner of your site during development, add the breakpoints\r\n// / to this list, ordered by width. For example: (mobile, tablet, desktop).\r\n//\r\n// / @example scss\r\n// /   $mq-show-breakpoints: (mobile, tablet, desktop);\r\n// /   @import 'path/to/mq';\r\n//\r\n// / @type map\r\n$mq-show-breakpoints: () !default\r\n\r\n/// Customize the media type (for example: `@media screen` or `@media print`)\r\n// / By default sass-mq uses an \"all\" media type (`@media all and …`)\r\n//\r\n// / @type String\r\n// / @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\r\n$mq-media-type: all !default\r\n\r\n/// Convert pixels to ems\r\n//\r\n// / @param {Number} $px - value to convert\r\n// / @ignore @param {Number} $base-font-size [$mq-base-font-size] - `<body>` font size (deprecated)\r\n//\r\n// / @example scss\r\n// /  $font-size-in-ems: mq-px2em(16px);\r\n// /  p { font-size: mq-px2em(16px); }\r\n//\r\n// / @requires $mq-base-font-size\r\n// / @returns {Number}\r\n@function mq-px2em($px, $base-font-size: $mq-base-font-size)\r\n  @if $mq-base-font-size != 16px\r\n    @warn \"Overriding $mq-base-font-size will break things, see https://github.com/sass-mq/sass-mq/issues/122.\"\r\n\r\n  @if $base-font-size != 16px\r\n    @warn \"The $base-font-size argument will be removed in sass-mq v6.0.0, as overriding it breaks things, see https://github.com/sass-mq/sass-mq/issues/122.\"\r\n\r\n  @if unitless($px)\r\n    @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\"\r\n\r\n    @return mq-px2em($px * 1px, $base-font-size)\r\n  @else if unit($px) == em\r\n    @return $px\r\n\r\n  @return $px / $base-font-size * 1em\r\n\r\n/// Get a breakpoint's width\r\n//\r\n// / @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\r\n//\r\n// / @example scss\r\n// /  $tablet-width: mq-get-breakpoint-width(tablet);\r\n// /  @media (min-width: mq-get-breakpoint-width(desktop)) {}\r\n//\r\n// / @requires {Variable} $mq-breakpoints\r\n//\r\n// / @returns {Number} Value in pixels\r\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints)\r\n  @if map-has-key($breakpoints, $name)\r\n    @return map-get($breakpoints, $name)\r\n  @else\r\n    @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\"\r\n\r\n/// Media Query mixin\r\n//\r\n// / @param {String | Boolean} $from [false] - One of $mq-breakpoints\r\n// / @param {String | Boolean} $until [false] - One of $mq-breakpoints\r\n// / @param {String | Boolean} $and [false] - Additional media query parameters\r\n// / @param {String} $media-type [$mq-media-type] - Media type: screen, print…\r\n//\r\n// / @ignore Undocumented API, for advanced use only:\r\n// / @ignore @param {Map} $breakpoints [$mq-breakpoints]\r\n// / @ignore @param {String} $static-breakpoint [$mq-static-breakpoint]\r\n//\r\n// / @content styling rules, wrapped into a @media query when $responsive is true\r\n//\r\n// / @requires {Variable} $mq-media-type\r\n// / @requires {Variable} $mq-breakpoints\r\n// / @requires {Variable} $mq-static-breakpoint\r\n// / @requires {function} mq-px2em\r\n// / @requires {function} mq-get-breakpoint-width\r\n//\r\n// / @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\r\n//\r\n// / @example scss\r\n// /  .element {\r\n// /    @include mq($from: mobile) {\r\n// /      color: red;\r\n// /    }\r\n// /    @include mq($until: tablet) {\r\n// /      color: blue;\r\n// /    }\r\n// /    @include mq(mobile, tablet) {\r\n// /      color: green;\r\n// /    }\r\n// /    @include mq($from: tablet, $and: '(orientation: landscape)') {\r\n// /      color: teal;\r\n// /    }\r\n// /    @include mq(950px) {\r\n// /      color: hotpink;\r\n// /    }\r\n// /    @include mq(tablet, $media-type: screen) {\r\n// /      color: hotpink;\r\n// /    }\r\n// /    // Advanced use:\r\n// /    $my-breakpoints: (L: 900px, XL: 1200px);\r\n// /    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\r\n// /      color: hotpink;\r\n// /    }\r\n// /  }\r\n=mq($from: false, $until: false, $and: false, $media-type: $mq-media-type, $breakpoints: $mq-breakpoints, $responsive: $mq-responsive, $static-breakpoint: $mq-static-breakpoint)\r\n  $min-width: 0\r\n  $max-width: 0\r\n  $media-query: \"\"\r\n\r\n  // From: this breakpoint (inclusive)\r\n  @if $from\r\n    @if type-of($from) == number\r\n      $min-width: mq-px2em($from)\r\n    @else\r\n      $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints))\r\n\r\n  // Until: that breakpoint (exclusive)\r\n  @if $until\r\n    @if type-of($until) == number\r\n      $max-width: mq-px2em($until)\r\n    @else\r\n      $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - 0.01em\r\n\r\n  // Responsive support is disabled, rasterize the output outside @media blocks\r\n  // The browser will rely on the cascade itself.\r\n  @if $responsive == false\r\n    $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints)\r\n    $target-width: mq-px2em($static-breakpoint-width)\r\n\r\n    // Output only rules that start at or span our target width\r\n    @if $and == false and $min-width <= $target-width and ($until == false or $max-width >= $target-width) and $media-type != \"print\"\r\n      @content\r\n  @else\r\n    @if $min-width != 0\r\n      $media-query: \"#{$media-query} and (min-width: #{$min-width})\"\r\n\r\n    @if $max-width != 0\r\n      $media-query: \"#{$media-query} and (max-width: #{$max-width})\"\r\n\r\n    @if $and\r\n      $media-query: \"#{$media-query} and #{$and}\"\r\n\r\n    // Remove unnecessary media query prefix 'all and '\r\n    @if $media-type == \"all\" and $media-query != \"\"\r\n      $media-type: \"\"\r\n      $media-query: str-slice(unquote($media-query), 6)\r\n\r\n    @media #{$media-type + $media-query}\r\n      @content\r\n\r\n/// Quick sort\r\n//\r\n// / @author Sam Richards\r\n// / @access private\r\n// / @param {List} $list - List to sort\r\n// / @returns {List} Sorted List\r\n@function _mq-quick-sort($list)\r\n  $less: ()\r\n  $equal: ()\r\n  $large: ()\r\n\r\n  @if length($list) > 1\r\n    $seed: nth($list, ceil(length($list) / 2))\r\n\r\n    @each $item in $list\r\n      @if $item == $seed\r\n        $equal: append($equal, $item)\r\n      @else if $item < $seed\r\n        $less: append($less, $item)\r\n      @else if $item > $seed\r\n        $large: append($large, $item)\r\n\r\n    @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large))\r\n\r\n  @return $list\r\n\r\n/// Sort a map by values (works with numbers only)\r\n//\r\n// / @access private\r\n// / @param {Map} $map - Map to sort\r\n// / @returns {Map} Map sorted by value\r\n@function _mq-map-sort-by-value($map)\r\n  $map-sorted: ()\r\n  $map-keys: map-keys($map)\r\n  $map-values: map-values($map)\r\n  $map-values-sorted: _mq-quick-sort($map-values)\r\n\r\n  // Reorder key/value pairs based on key values\r\n  @each $value in $map-values-sorted\r\n    $index: index($map-values, $value)\r\n    $key: nth($map-keys, $index)\r\n    $map-sorted: map-merge($map-sorted, ($key: $value))\r\n\r\n    // Unset the value in $map-values to prevent the loop\r\n    // from finding the same index twice\r\n    $map-values: set-nth($map-values, $index, 0)\r\n\r\n  @return $map-sorted\r\n\r\n/// Add a breakpoint\r\n//\r\n// / @param {String} $name - Name of the breakpoint\r\n// / @param {Number} $width - Width of the breakpoint\r\n//\r\n// / @requires {Variable} $mq-breakpoints\r\n//\r\n// / @example scss\r\n// /  @include mq-add-breakpoint(tvscreen, 1920px);\r\n// /  @include mq(tvscreen) {}\r\n=mq-add-breakpoint($name, $width)\r\n  $new-breakpoint: ($name: $width)\r\n  $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global\r\n  $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global\r\n\r\n/// Show the active breakpoint in the top right corner of the viewport\r\n// / @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\r\n//\r\n// / @param {List} $show-breakpoints [$mq-show-breakpoints] - List of breakpoints to show in the top right corner\r\n// / @param {Map} $breakpoints [$mq-breakpoints] - Breakpoint names and sizes\r\n//\r\n// / @requires {Variable} $mq-breakpoints\r\n// / @requires {Variable} $mq-show-breakpoints\r\n//\r\n// / @example scss\r\n// /  // Show breakpoints using global settings\r\n// /  @include mq-show-breakpoints;\r\n//\r\n// /  // Show breakpoints using custom settings\r\n// /  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\r\n=mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints)\r\n  body:before\r\n    background-color: #FCF8E3\r\n    border-bottom: 1px solid #FBEED5\r\n    border-left: 1px solid #FBEED5\r\n    color: #C09853\r\n    font: small-caption\r\n    padding: 3px 6px\r\n    pointer-events: none\r\n    position: fixed\r\n    right: 0\r\n    top: 0\r\n    z-index: 100\r\n\r\n    // Loop through the breakpoints that should be shown\r\n    @each $show-breakpoint in $show-breakpoints\r\n      $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints)\r\n\r\n      +mq($show-breakpoint, $breakpoints: $breakpoints)\r\n        content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\"\r\n\r\n@if length($mq-show-breakpoints) > 0\r\n  +mq-show-breakpoints","@import \"src/styles/colors\"\r\n\r\n.drawer-container\r\n  background-color: $background-color\r\n  padding: 29px 16px 16px\r\n  display: flex\r\n  flex-direction: column\r\n  .tittle\r\n    font-size: 16px\r\n    font-weight: 500\r\n  .description\r\n    font-size: 14px\r\n    padding-top: 16px\r\n    &.medium\r\n      font-size: 16px\r\n      padding-top: 56px\r\n  .stack\r\n    padding-top: 16px\r\n    .paper\r\n      display: flex\r\n      flex-direction: row\r\n      align-items: center\r\n      border-radius: 12px\r\n      padding: 12px\r\n      margin-top: 8px\r\n      cursor: pointer\r\n      .avatar\r\n        width: 44px\r\n        height: 44px\r\n        background-color: $grey-bg\r\n      span\r\n        padding-left: 12px\r\n        font-size: 16px\r\n        font-weight: 500\r\n  .btn-container\r\n    padding-top: 29px\r\n    display: flex\r\n    flex: 1\r\n    justify-content: flex-end\r\n    flex-direction: column\r\n    button:nth-child(2)\r\n      padding-top: 16px",".header\r\n    z-index: 0\r\n    height: 140px\r\n    display: flex\r\n    position: relative\r\n    align-items: center\r\n    justify-content: center\r\n    text-align: center\r\n    .bg-img\r\n        height: 170px\r\n        width: 100%\r\n        margin-top: 85px\r\n    .logo-img\r\n        background-color: transparent\r\n        position: absolute\r\n        width: 170px\r\n        z-index: 999999999\r\n        align-self: center\r\n        justify-content: center\r\n        margin-top: 10px\r\n\r\n\r\n",".autocomplete\r\n  z-index: 999999\r\n  height: 42px\r\n  background: #FFFFFF\r\n  box-shadow: 0px 0px 1px rgba(40, 41, 61, 0.04), 0px 2px 4px rgba(96, 97, 112, 0.16)\r\n  border-radius: 12px\r\n  padding-left: 16px\r\n  padding-right: 16px\r\n  display: flex\r\n  margin: 8px\r\n\r\n.autocomplete-input\r\n  width: 100%\r\n  font-size: 16px\r\n  outline-width: 0\r\n  border: 0px\r\n  -webkit-appearance: none\r\n\r\n",".explore-dapps\r\n  display: flex\r\n  flex-direction: row\r\n  padding-bottom: 18px\r\n  flex-wrap: wrap\r\n\r\n  .main-category\r\n    display: flex\r\n    background: linear-gradient(90.72deg, #B2FEAB 1.92%, #76B5FF 99.38%)\r\n    width: 100%\r\n    margin: 8px\r\n    border-radius: 12px\r\n    padding: 8px\r\n    text-decoration: none\r\n\r\n    .title\r\n      color: white\r\n      font-weight: 500\r\n      font-size: 16px\r\n      line-height: 16px\r\n      text-align: left\r\n      padding-left: 6px\r\n\r\n    .description\r\n      padding-left: 6px\r\n      color: white\r\n      text-align: left\r\n","@import \"src/styles/vars\"\r\n\r\n.dapp-category-container\r\n  display: flex\r\n  flex: 0.5\r\n  min-width: 50%\r\n\r\n.dapp-category\r\n  position: relative\r\n  display: flex\r\n  flex: 1 1\r\n  border-radius: 12px\r\n  text-align: center\r\n  align-items: flex-start\r\n  margin: 8px\r\n  padding: 8px\r\n  flex-direction: column\r\n  overflow: hidden\r\n  background-color: #FFFFFF\r\n  box-shadow: 0 0 1px rgba(40, 41, 61, 0.04), 0 2px 4px rgba(96, 97, 112, 0.16)\r\n\r\n.dapp-category-image-container\r\n  background: #F2F3F6\r\n  padding: 10px\r\n  border-radius: 50%\r\n\r\n.dapp-category-counter\r\n  position: absolute\r\n  top: 10px\r\n  right: 20px\r\n  color: #9B9B9B\r\n  font-size: 12px\r\n  font-weight: bold\r\n\r\n.dapp-category:nth-child(even)\r\n  margin-right: 0px\r\n\r\n.dapp-category-icon\r\n  font-size: 32px\r\n  line-height: 32px\r\n  width: 32px\r\n  height: 32px\r\n\r\n.dapp-category-name\r\n  font-family: 'Roboto', sans-serif\r\n  display: flex\r\n  font-style: normal\r\n  font-weight: 500\r\n  font-size: 14px\r\n  color: #001833\r\n  padding-top: 10px\r\n  text-align: left\r\n  letter-spacing: 0.5px\r\n","@import \"src/styles/vars\"\r\n\r\n.switcher-container\r\n  display: flex\r\n  justify-content: center\r\n  padding-top: 8px\r\n  font-size: 16px\r\n  font-weight: 500\r\n  .col\r\n    padding: 5px\r\n    color: transparentize($black-text, 0.8)\r\n    border-bottom: 2px solid transparentize($black-text, 0.8)\r\n    &.selected\r\n      color: $black-text\r\n      border-bottom: 2px solid $black-text\r\n","@import \"./colors\"\r\n\r\n*, *:before, *:after\r\n  box-sizing: border-box\r\n\r\nhtml, body, div, span, object, iframe, figure, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, code, em, img, small, strike, strong, sub, sup, tt, b, u, i, ol, ul, li, fieldset, form, label, table, caption, tbody, tfoot, thead, tr, th, td, main, canvas, embed, footer, header, nav, section, video\r\n  margin: 0\r\n  padding: 0\r\n  border: 0\r\n  font: inherit\r\n  vertical-align: baseline\r\n  text-rendering: optimizeLegibility\r\n  -webkit-font-smoothing: antialiased\r\n  font-size: 14px\r\n  text-size-adjust: none\r\n  font-family: Roboto\r\n\r\n/* Chrome, Safari, Edge, Opera */\r\ninput::-webkit-outer-spin-button,\r\ninput::-webkit-inner-spin-button\r\n  -webkit-appearance: none\r\n  margin: 0\r\n\r\n/* Firefox */\r\ninput[type=number]\r\n  -moz-appearance: textfield\r\n\r\n\r\nfooter, header, nav, section, main\r\n  display: flex\r\n\r\nbody\r\n  line-height: 1\r\n\r\nol, ul\r\n  list-style: none\r\n\r\nblockquote, q\r\n  quotes: none\r\n\r\nblockquote:before, blockquote:after, q:before, q:after\r\n  content: ''\r\n  content: none\r\n\r\ntable\r\n  border-collapse: collapse\r\n  border-spacing: 0\r\n\r\ninput\r\n  -webkit-appearance: none\r\n  border-radius: 0\r\n  width: 100%\r\n\r\n","// global\r\n\r\n@import \"./styles/index\"\r\n\r\n.App\r\n  display: flex\r\n  flex: 1\r\n  min-height: 100vh\r\n  overflow: auto\r\n  background: $background-color\r\n  justify-content: center\r\n\r\n","@import \"src/styles/vars\"\r\n\r\n\r\n.dapp\r\n  display: flex\r\n  flex: 1\r\n  margin-bottom: 15px\r\n  padding: 10px 16px 10px 8px\r\n  background: #FFFFFF\r\n  border-radius: 8px\r\n  flex-direction: column\r\n\r\n.dapp:active\r\n  opacity: 0.5\r\n\r\n.dapp-logo\r\n  margin-top: 2px\r\n  width: 48px\r\n  min-width: 48px\r\n  height: auto\r\n  border-radius: 9px\r\n  margin-right: 16px\r\n\r\n.column\r\n  display: flex\r\n  flex-direction: column\r\n\r\n.dapp-row\r\n  flex-direction: row\r\n  flex: 1 1\r\n\r\n.grow\r\n  flex: 1\r\n  cursor: pointer\r\n\r\n.around\r\n  flex: 1\r\n  justify-content: space-around\r\n\r\n.dapp-logo-small\r\n  min-width: 32px\r\n  height: 32px\r\n\r\n.dapp-name\r\n  font-style: normal\r\n  font-size: 16px\r\n  font-weight: 500\r\n  line-height: 25px\r\n  align-items: center\r\n  color: #24292E\r\n  text-align: left\r\n  margin-bottom: 3px\r\n  margin-top: 0px\r\n  overflow: hidden\r\n  white-space: nowrap\r\n  text-overflow: ellipsis\r\n\r\n.dapp-name-small\r\n  font-size: 16px\r\n  line-height: 22px\r\n\r\n.arrow\r\n  cursor: pointer\r\n  width: 14px\r\n  transform: rotate(360deg)\r\n  // padding: 20px 20px 20px 0\r\n\r\n.rotate\r\n  transform: rotate(270deg)\r\n  // padding: 20px 0 20px 20px\r\n\r\n.dapp-border\r\n  border-bottom: 1px solid #9B9B9B\r\n\r\n.dapp-desc\r\n  margin-top: 0px\r\n  margin-bottom: 0px\r\n  font-style: normal\r\n  font-weight: normal\r\n  font-size: 12px\r\n  line-height: 17px\r\n  text-align: left\r\n  color: #9B9B9B\r\n\r\n.dapp-content\r\n  width: 80%\r\n\r\n.dapp-url\r\n  font-family: Roboto, serif\r\n  font-style: normal\r\n  font-weight: normal\r\n  font-size: 12px\r\n  line-height: 17px\r\n  text-align: left\r\n  color: $blue-primary\r\n  overflow: hidden\r\n  white-space: nowrap\r\n  text-overflow: ellipsis\r\n  display: block\r\n\r\n.dapp-close\r\n  width: 16px\r\n  height: 16px\r\n  padding: 5px\r\n  position: absolute\r\n  right: 0px\r\n  margin-right: 17px\r\n  margin-top: -5px\r\n  text-align: center\r\n  background-color: transparent\r\n  display: block\r\n  box-sizing: content-box\r\n  border: 0px\r\n\r\n.center\r\n  justify-content: center\r\n\r\n.row\r\n  display: flex\r\n  flex-direction: row\r\n\r\n.title\r\n  margin-bottom: 10px\r\n  color: $blue-primary\r\n  font-weight: 500\r\n  font-size: 12px\r\n\r\n",".navbar\r\n  display: flex\r\n  flex: 1\r\n  flex-direction: row\r\n  margin-bottom: 15px\r\n  align-items: center\r\n  padding-top: 5px\r\n\r\n.navbar-back\r\n  margin: 16px 36px 16px 20px\r\n  border: 0\r\n  background-color: transparent\r\n  align-self: center\r\n  padding-top: 3px\r\n\r\n.navbar h1\r\n  color: #001833\r\n  font-weight: 500\r\n  display: flex\r\n  flex: 1\r\n  font-style: normal\r\n  font-size: 20px\r\n  line-height: 25px\r\n\r\n","@import \"colors\"\r\n\r\n.MuiPaper-elevation\r\n  border-top-left-radius: 16px !important\r\n  border-top-right-radius: 16px !important\r\n\r\n.MuiAlert-root\r\n  border-color: transparent !important\r\n\r\n.MuiButton-root\r\n  text-transform: none !important\r\n  border-radius: 12px !important\r\n  font-size: 16px !important\r\n  font-weight: 500 !important\r\n  box-shadow: none !important\r\n  &.MuiButton-containedPrimary\r\n    background-color: $blue-primary\r\n  &.MuiButton-textPrimary\r\n    color: $blue-primary","@import \"src/styles/vars\"\r\n\r\n.category-container\r\n  width: 800px\r\n  flex-direction: column\r\n  @include mq($until: tablet)\r\n    width: 100%\r\n\r\n.category-wrapper\r\n  margin-left: 15px\r\n  margin-right: 15px\r\n  padding-bottom: 15px\r\n"]}