{"version":3,"sources":["constants/api.ts","translations/i18n.ts","screens/home/HomeViewModel.ts","static/images/humaniq-logo.svg","static/images/wallet-connect-logo.svg","static/images/web3-logo.svg","components/dialogs/ConnectDialog.tsx","components/dialogs/DisconnectDialog.tsx","static/images/logo-wordmark.svg","components/header/Header.tsx","components/autocomplete/Autocoplete.tsx","stores/appStore/alertStore.ts","utils/browser.ts","data/all-dapps.ts","components/explore-dapps/DappCategory.tsx","components/explore-dapps/ExploreDapps.tsx","stores/appStore/appStore.ts","utils/hoc.tsx","components/network-switcher/NetworkSwitcher.tsx","screens/home/Home.tsx","utils/routes.ts","screens/404/404.tsx","static/images/close-icon.svg","static/images/arrow-down.svg","components/dapp/Dapp.tsx","static/images/back-icon.svg","components/navbar/Navbar.tsx","screens/category/Category.tsx","App.tsx","index.tsx","utils/logcat.ts","stores/providerStore.ts"],"names":["rpc","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","changeLanguage","HomeViewModel","galleryRef","initialized","makeAutoObservable","this","autoBind","ConnectDialog","observer","SwipeableDrawer","anchor","open","getProviderStore","connectDialog","onClose","onOpen","toggleConnectDialog","style","borderRadius","Box","className","sx","width","minHeight","t","Stack","Paper","elevation","onClick","setProvider","PROVIDERS","WEB3","Avatar","alt","src","HumaniqLogo","WC","WCLogo","Web3Logo","Button","variant","DisconnectDialog","disconnectDialog","toggleDisconnectDialog","disconnect","Header","LogoWordmark","ALERT_TYPE","Autocomplete","useState","value","setState","onSubmit","event","preventDefault","sanitizedInput","input","searchEngine","defaultProtocol","match","searchUrl","escape","onUrlSubmit","window","location","href","autoCapitalize","type","placeholder","onChange","target","filtered","name","displayIos","icon","color","iconColor","dapps","url","description","title","isBSC","isEth","DappCategory","data","str","toLowerCase","replace","to","backgroundColor","mask","height","ExploreDapps","allDapps","map","dapp","index","EVM_NETWORKS","AlertStore","displayAlert","alertMessage","alertType","SUCCESS","alertClick","alertClose","reason","undefined","Store","Component","app","selectedNetwork","BSC","alert","NetworkSwitcher","ETHEREUM","Home","store","props","useMemo","routes","home","path","NotFound","Dapp","close","size","closable","isOpen","setIsOpen","host","setHost","useEffect","site","URL","e","stopPropagation","console","log","renderDescription","closeIcon","isOpened","arrowIcon","Navbar","backIcon","Category","category","setCategory","params","useParams","cat","find","JSON","stringify","updateCategory","filter","c","i","position","Buffer","b","ProviderStore","Alert","React","forwardRef","ref","borderColor","App","a","element","Snackbar","autoHideDuration","severity","configure","enforceActions","ReactDOM","render","document","getElementById","Logcat","debug","msg","err","optionalParams","error","info","warn","currentAccount","hasProvider","currentProvider","chainId","connectedProvider","provider","WalletConnectProvider","enable","result","initProvider","ethereum","connectToWeb3","localStorage","setItem","on","accounts","payload","getItem","request","method","personalMessageRequest","message","from","toString","connect","removeItem"],"mappings":"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","file":"static/js/main.a14287ec.chunk.js","sourcesContent":["export const API_HUMANIQ_URL = \"https://signupbot.humaniq.com/api/v1\";\r\nexport const API_HUMANIQ_TOKEN = \"XMaLhU75ZFklvAiV7yBZBNnlWsE9IowU\";\r\n\r\nexport const HUMANIQ_ROUTES = {\r\n  INTROSPECT: {\r\n    POST_SIGNUP_CHECK: \"/introspect/signup/check\",\r\n    POST_SIGNUP_CONFIRM: \"/introspect/signup/confirm\",\r\n    GET_SIGNUP_OBJECT: \"/introspect/signup/object/:uid\",\r\n    GET_SIGNUP_PHOTO: \"/introspect/signup/photo/:uid\",\r\n    GET_SIGNUP_WALLET: \"/introspect/signup/wallet/:wallet\",\r\n  },\r\n  DAPP: {\r\n    POST_PROFILE_UPDATE: \"/dapp/profile/update\",\r\n    POST_PROFILE_PHOTO_UPDATE: \"/photo/upload\",\r\n  },\r\n  PHOTO: {\r\n    POST_PHOTO: \"/photo/upload\",\r\n  },\r\n};\r\n\r\nexport const rpc = {\r\n  1: \"https://mainnet.infura.io/v3/c306191fe58d401b900a38911b8a43c9\",\r\n  3: \"https://ropsten.infura.io/v3/c306191fe58d401b900a38911b8a43c9\",\r\n  4: \"https://rinkeby.infura.io/v3/c306191fe58d401b900a38911b8a43c9\",\r\n  5: \"https://goerli.infura.io/v3/c306191fe58d401b900a38911b8a43c9\",\r\n  97: \"https://data-seed-prebsc-1-s1.binance.org:8545\",\r\n  56: \"https://bsc-dataseed.binance.org\",\r\n};\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\nimport en from \"./en/en.json\";\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources: {\r\n      en: {\r\n        translation: en,\r\n      },\r\n    },\r\n  });\r\n\r\ni18n.changeLanguage(\"en\");\r\n","import { RefObject } from \"react\";\r\nimport { makeAutoObservable } from \"mobx\";\r\n\r\nexport class HomeViewModel {\r\n  galleryRef?: RefObject<HTMLInputElement>;\r\n\r\n  initialized = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this, {}, { autoBind: true });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/humaniq-logo.cb2c62db.svg\";","export default __webpack_public_path__ + \"static/media/wallet-connect-logo.6fa61a47.svg\";","export default __webpack_public_path__ + \"static/media/web3-logo.9ae2b06d.svg\";","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { getProviderStore } from \"../../App\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Paper,\r\n  Stack,\r\n  SwipeableDrawer,\r\n} from \"@mui/material\";\r\nimport { t } from \"i18next\";\r\nimport { PROVIDERS } from \"../../stores/providerStore\";\r\nimport HumaniqLogo from \"../../static/images/humaniq-logo.svg\";\r\nimport WCLogo from \"../../static/images/wallet-connect-logo.svg\";\r\nimport Web3Logo from \"../../static/images/web3-logo.svg\";\r\nimport \"./styles.sass\";\r\n\r\nexport interface ConnectDialogProps {}\r\n\r\nexport const ConnectDialog: React.FC<ConnectDialogProps> = observer(() => {\r\n  return (\r\n    <SwipeableDrawer\r\n      anchor={\"bottom\"}\r\n      open={getProviderStore.connectDialog}\r\n      onClose={() => (getProviderStore.connectDialog = false)}\r\n      onOpen={getProviderStore.toggleConnectDialog}\r\n      style={{ borderRadius: 16 }}\r\n    >\r\n      <Box\r\n        className={\"drawer-container\"}\r\n        sx={{ width: \"auto\", minHeight: 300 }}\r\n      >\r\n        <h1 className={\"tittle\"}>{t(\"connectWalletDialog\")}</h1>\r\n        <div className={\"description\"}>{t(\"chooseConnection\")}</div>\r\n        <Stack className={\"stack\"}>\r\n          <Paper\r\n            elevation={0}\r\n            className={\"paper\"}\r\n            onClick={() => getProviderStore.setProvider(PROVIDERS.WEB3)}\r\n          >\r\n            <Avatar className={\"avatar\"}>\r\n              <img alt={\"humaniq\"} src={HumaniqLogo} />\r\n            </Avatar>\r\n            <span>{t(\"humaniqName\")}</span>\r\n          </Paper>\r\n          <Paper\r\n            elevation={0}\r\n            className={\"paper\"}\r\n            onClick={() => getProviderStore.setProvider(PROVIDERS.WC)}\r\n          >\r\n            <Avatar className={\"avatar\"}>\r\n              <img src={WCLogo} alt={\"wallet-connect\"} />\r\n            </Avatar>\r\n            <span>{t(\"walletConnectName\")}</span>\r\n          </Paper>\r\n          <Paper\r\n            elevation={0}\r\n            className={\"paper\"}\r\n            onClick={() => getProviderStore.setProvider(PROVIDERS.WEB3)}\r\n          >\r\n            <Avatar className={\"avatar\"}>\r\n              <img alt={\"web3\"} src={Web3Logo} />\r\n            </Avatar>\r\n            <span>{t(\"web3Name\")}</span>\r\n          </Paper>\r\n        </Stack>\r\n        <div className={\"btn-container\"}>\r\n          <Button\r\n            onClick={getProviderStore.toggleConnectDialog}\r\n            className={\"btn\"}\r\n            variant={\"text\"}\r\n          >\r\n            {t(\"later\")}\r\n          </Button>\r\n        </div>\r\n      </Box>\r\n    </SwipeableDrawer>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Box, Button, SwipeableDrawer } from \"@mui/material\";\r\nimport { getProviderStore } from \"../../App\";\r\nimport { t } from \"i18next\";\r\nimport \"./styles.sass\";\r\n\r\nexport interface DisconnectDialogProps {}\r\n\r\nexport const DisconnectDialog: React.FC<DisconnectDialogProps> = observer(\r\n  () => {\r\n    return (\r\n      <SwipeableDrawer\r\n        anchor={\"bottom\"}\r\n        open={getProviderStore.disconnectDialog}\r\n        onClose={() => (getProviderStore.disconnectDialog = false)}\r\n        onOpen={getProviderStore.toggleDisconnectDialog}\r\n        style={{ borderRadius: 16 }}\r\n      >\r\n        <Box\r\n          className={\"drawer-container\"}\r\n          sx={{ width: \"auto\", minHeight: 300 }}\r\n        >\r\n          <h1 className={\"tittle\"}>{t(\"disconnectWalletDialog\")}</h1>\r\n          <div className={\"description medium\"}>{t(\"chooseDisconnection\")}</div>\r\n          <div className={\"btn-container\"}>\r\n            <Button\r\n              onClick={getProviderStore.disconnect}\r\n              className={\"btn\"}\r\n              variant={\"contained\"}\r\n            >\r\n              {t(\"disconnect\")}\r\n            </Button>\r\n            <Button\r\n              onClick={getProviderStore.toggleDisconnectDialog}\r\n              className={\"btn\"}\r\n              variant={\"text\"}\r\n            >\r\n              {t(\"cancel\")}\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </SwipeableDrawer>\r\n    );\r\n  }\r\n);\r\n","export default __webpack_public_path__ + \"static/media/logo-wordmark.22da6c60.svg\";","import React from \"react\";\nimport LogoWordmark from \"../../static/images/logo-wordmark.svg\";\nimport \"./index.sass\";\n\nexport const Header = () => {\n  return (\n    <div className={\"header\"}>\n      <img\n        src={LogoWordmark}\n        className={\"header logo-img\"}\n        alt={\"background\"}\n      />\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./index.sass\";\nimport onUrlSubmit from \"../../utils/browser\";\n\nexport const Autocomplete = () => {\n  const [value, setState] = useState(\"\");\n\n  const handleChange = (event: any) => {\n    setState(event?.target?.value);\n  };\n\n  const handleSubmit = (event: { preventDefault: () => void }) => {\n    event.preventDefault();\n    const searchEngine = \"DuckDuckGo\";\n    const sanitizedInput = onUrlSubmit(value, searchEngine);\n    window.location.href = sanitizedInput;\n  };\n\n  return (\n    <form className={\"autocomplete\"} onSubmit={handleSubmit}>\n      <input\n        autoCapitalize=\"none\"\n        type={\"text\"}\n        placeholder={\"Search or type web address\"}\n        className={\"autocomplete-input\"}\n        value={value}\n        onChange={handleChange}\n      />\n    </form>\n  );\n};\n","import { makeAutoObservable } from \"mobx\";\r\nimport React from \"react\";\r\n\r\nexport enum ALERT_TYPE {\r\n  SUCCESS = \"success\",\r\n  ERROR = \"error\",\r\n  WARNING = \"warning\",\r\n  INFO = \"info\",\r\n}\r\n\r\nexport class AlertStore {\r\n  constructor() {\r\n    makeAutoObservable(this, undefined, { autoBind: true });\r\n  }\r\n\r\n  displayAlert = false;\r\n  alertMessage = \"\";\r\n  alertType: ALERT_TYPE = ALERT_TYPE.SUCCESS;\r\n\r\n  alertClick = () => {\r\n    this.displayAlert = true;\r\n  };\r\n\r\n  alertClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.displayAlert = false;\r\n  };\r\n}\r\n","import URL from \"url-parse\";\n\n/**\n * Returns a sanitized url, which could be a search engine url if\n * a keyword is detected instead of a url\n *\n * @param {string} input - String corresponding to url input\n * @param {string} searchEngine - Protocol string to append to URLs that have none\n * @param {string} defaultProtocol - Protocol string to append to URLs that have none\n * @returns {string} - String corresponding to sanitized input depending if it's a search or url\n */\nexport default function onUrlSubmit(\n  input: string,\n  searchEngine = \"DuckDuckGo\",\n  defaultProtocol = \"https://\"\n) {\n  //Check if it's a url or a keyword\n  const res = input.match(\n    /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w.-]+)+[\\w\\-._~:/?#[\\]@!&',;=.+]+$/g\n  );\n  if (res === null) {\n    // In case of keywords we default to google search\n    let searchUrl = \"https://www.google.com/search?q=\" + escape(input);\n    if (searchEngine === \"DuckDuckGo\") {\n      searchUrl = \"https://duckduckgo.com/?q=\" + escape(input);\n    }\n    return searchUrl;\n  }\n  const hasProtocol = input.match(/^[a-z]*:\\/\\//);\n  const sanitizedURL = hasProtocol ? input : `${defaultProtocol}${input}`;\n  return sanitizedURL;\n}\n\nexport function getHost(url: string) {\n  const urlObj = new URL(url);\n  const { hostname } = urlObj;\n  return hostname;\n}\n","import b from \"buffer\";\n\nexport interface IDapp {\n  name: string;\n  url: string;\n  description: string;\n  icon: string;\n  title?: string;\n  isBSC: boolean;\n  isEth: boolean;\n}\n\nexport interface IDappCategory {\n  name: string;\n  displayIos: boolean;\n  icon: string;\n  color: string;\n  iconColor: string;\n  dapps: Array<IDapp>;\n}\n\nconst categories = [\n  {\n    name: \"Crypto in Africa\",\n    displayIos: false,\n    icon: \"./images/categories/africa.svg\",\n    color: \"#E5F7DB\",\n    iconColor: \"#A1D186\",\n    dapps: [\n      {\n        name: \"HumanID bot\",\n        url: \"https://t.me/HumaniqID_bot\",\n        description: \"Pass HumanID and get $1 for a lunch in Dar-Es-Salaam\",\n        icon: \"./images/dapps/humaniq-bot.svg\",\n        title: \"@humaniqID_bot\",\n        isBSC: true,\n        isEth: false,\n      },\n      {\n        name: \"Education bot\",\n        url: \"https://t.me/ed_humaniq_bot\",\n        description: \"Courses that changed the lives of millions of people\",\n        icon: \"./images/dapps/education-bot.png\",\n        title: \"@ed_humaniq_bot\",\n        isBSC: true,\n        isEth: false,\n      },\n      {\n        name: \"Savy\",\n        url: \"https://savy.finance/\",\n        description: \"Make your first crypto capital  and use it as colleteral\",\n        icon: \"./images/dapps/savy.svg\",\n        isBSC: true,\n        isEth: false,\n      },\n      {\n        name: \"PancakeSwap\",\n        url: \"https://pancakeswap.finance/\",\n        description: \"Swap crypto on Binance Smart Chain. Buy WBGL here\",\n        icon: \"./images/dapps/pancake.svg\",\n        isBSC: true,\n        isEth: false,\n      },\n      {\n        name: \"$1 for lunch\",\n        url: \"https://getlunch.humaniq.com/\",\n        description: \"Develop your HumanID and grab more lunches!\",\n        icon: \"./images/dapps/one-dollar.svg\",\n        isBSC: true,\n        isEth: false,\n      },\n      {\n        name: \"HumanID\",\n        url: \"https://idapp.humaniq.com/\",\n        description: \"Update your HumanID by connecting your wallet\",\n        icon: \"./images/dapps/humaniq-id.svg\",\n        isBSC: true,\n        isEth: false,\n      },\n      {\n        name: \"Humaniq DAO\",\n        url: \"https://rhetorical-bulb-a1b.notion.site/Humaniq-DAO-3311d4d6baa94b0894042d98542498d4\",\n        description: \"Join the project building and earn crypto\",\n        icon: \"./images/dapps/humaniq-dao.png\",\n        isBSC: true,\n        isEth: true,\n      },\n      {\n        name: \"BSCscan\",\n        url: \"https://bscscan.com/\",\n        description: \"Explore the Binance Smart Chain blockchain\",\n        icon: \"./images/dapps/bscscan.svg\",\n        isBSC: true,\n        isEth: false,\n      },\n      {\n        name: \"Etherscan\",\n        url: \"https://etherscan.io/\",\n        description: \"Explore the Ethereum Mainnet blockchain\",\n        icon: \"./images/dapps/etherscan.svg\",\n        isBSC: false,\n        isEth: true,\n      },\n    ],\n  },\n  {\n    name: \"Job in crypto\",\n    displayIos: false,\n    icon: \"./images/categories/crypto.svg\",\n    color: \"#E5F7DB\",\n    iconColor: \"#A1D186\",\n    dapps: [\n      {\n        name: \"Humaniq DAO\",\n        url: \"https://rhetorical-bulb-a1b.notion.site/Humaniq-DAO-3311d4d6baa94b0894042d98542498d4\",\n        description: \"Join the project building and earn crypto\",\n        icon: \"./images/dapps/humaniq-dao.png\",\n        isBSC: true,\n        isEth: true,\n      },\n    ],\n  },\n  {\n    name: \"Exchange crypto\",\n    displayIos: false,\n    icon: \"./images/categories/arrows.svg\",\n    color: \"#D8F7F7\",\n    iconColor: \"#76D3DF\",\n    dapps: [\n      {\n        name: \"PancakeSwap\",\n        url: \"https://pancakeswap.finance/\",\n        description: \"Swap crypto on Binance Smart Chain. Buy WBGL here\",\n        icon: \"./images/dapps/pancake.svg\",\n        isBSC: true,\n        isEth: false,\n      },\n      {\n        name: \"Uniswap\",\n        url: \"https://uniswap.exchange/\",\n        description: \"Swap crypto on Ethereum. Buy WBGL here\",\n        icon: \"./images/dapps/uniswap.svg\",\n        isBSC: false,\n        isEth: true,\n      },\n      {\n        name: \"Localbitcoins\",\n        url: \"https://localbitcoins.com/\",\n        description: \"Exchange your crypto to fiat and back with other users\",\n        icon: \"./images/dapps/localbitcoins.svg\",\n        isBSC: true,\n        isEth: true,\n      },\n    ],\n  },\n  {\n    name: \"Crypto prices\",\n    displayIos: false,\n    icon: \"./images/categories/chart.svg\",\n    color: \"#D8F7F7\",\n    iconColor: \"#76D3DF\",\n    dapps: [\n      {\n        name: \"CoinMarketCap\",\n        url: \"https://coinmarketcap.com/\",\n        description: \"Track the prices and rankings of crypto assets\",\n        icon: \"./images/dapps/coinmarketcap.svg\",\n        isBSC: true,\n        isEth: true,\n      },\n      {\n        name: \"CoinGecko\",\n        url: \"https://www.coingecko.com/\",\n        description: \"Track the prices and rankings of crypto assets\",\n        icon: \"./images/dapps/coingecko.svg\",\n        isBSC: true,\n        isEth: true,\n      },\n      {\n        name: \"DeFi Pulse\",\n        url: \"https://www.defipulse.com/\",\n        description: \"Track the prices and rankings of crypto assets\",\n        icon: \"./images/dapps/defipulse.svg\",\n        isBSC: true,\n        isEth: true,\n      },\n    ],\n  },\n  {\n    name: \"Create and sell NFT\",\n    displayIos: false,\n    icon: \"./images/categories/art.svg\",\n    color: \"#D8F7F7\",\n    iconColor: \"#76D3DF\",\n    dapps: [\n      {\n        name: \"OpenSea\",\n        url: \"https://opensea.io/\",\n        description: \"Discover, collect, and sell extraordinary NFTs\",\n        icon: \"./images/dapps/opensea.svg\",\n        isBSC: true,\n        isEth: true,\n      },\n      {\n        name: \"Rarible\",\n        url: \"https://rarible.com/\",\n        description: \"NFT community-owned marketplace and issuance platform\",\n        icon: \"./images/dapps/rarible.svg\",\n        isBSC: true,\n        isEth: true,\n      },\n    ],\n  },\n];\n\n// hide any of the above on iOS when displayIos is false\nconst filtered = categories;\n\nexport default filtered;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./DappCategory.sass\";\nimport { IDappCategory } from \"../../data/all-dapps\";\n\nexport interface DappCategoryProps {\n  data: IDappCategory;\n}\n\nexport const DappCategory: React.FC<DappCategoryProps> = ({ data }) => {\n  const { name, icon } = data;\n\n  const str = { \"-webkit-mask\": `url(${icon}) no-repeat center / contain` };\n  const url = `/${name.toLowerCase().replace(\" \", \"-\")}`;\n\n  return (\n    <Link className={\"dapp-category-container\"} to={url}>\n      <div className={\"dapp-category\"}>\n        <div className={\"dapp-category-image-container\"}>\n          <div\n            style={{\n              ...str,\n              backgroundColor: \"#0066DA\",\n              mask: `url(${icon}) no-repeat center / contain`,\n              width: 20,\n              height: 20,\n            }}\n          ></div>\n        </div>\n        <span className={\"dapp-category-name\"}>{name}</span>\n      </div>\n    </Link>\n  );\n};\n","import React from \"react\";\nimport allDapps from \"../../data/all-dapps\";\nimport \"./index.sass\";\nimport { DappCategory } from \"./DappCategory\";\nimport { t } from \"i18next\";\nimport { Link } from \"react-router-dom\";\n\nexport const ExploreDapps = () => {\n  return (\n    <div className={\"explore-dapps\"}>\n      {\n        <Link\n          to={`/${allDapps[0].name.toLowerCase().replace(\" \", \"-\")}`}\n          className={\"main-category\"}\n        >\n          <div>\n            <img src={allDapps[0].icon} alt={\"africa\"} />\n          </div>\n          <div>\n            <div className={\"title\"}>{allDapps[0].name}</div>\n            <div className={\"description\"}> {t(\"takeFirst\")}</div>\n          </div>\n        </Link>\n      }\n      {allDapps.map((dapp, index) => {\n        if (index === 0) return null;\n        return <DappCategory data={dapp} key={dapp.name} />;\n      })}\n    </div>\n  );\n};\n","import { makeAutoObservable } from \"mobx\";\nimport { AlertStore } from \"./alertStore\";\n\nexport enum EVM_NETWORKS {\n  BSC = \"bsc\",\n  ETHEREUM = \"ethereum\",\n}\n\nexport class AppStore {\n  selectedNetwork = EVM_NETWORKS.BSC;\n\n  constructor() {\n    makeAutoObservable(this, undefined, { autoBind: true });\n  }\n\n  alert = new AlertStore();\n}\n\nexport const app = new AppStore();\n","import React, { useMemo } from \"react\";\r\n\r\nexport const withStore =\r\n  (Store: any, Component: any) =>\r\n  ({ ...props }) => {\r\n    const store = useMemo(() => {\r\n      return new Store();\r\n    }, []);\r\n\r\n    return <Component store={store} {...props} />;\r\n  };\r\n","import React from \"react\";\nimport \"./index.sass\";\nimport { app, EVM_NETWORKS } from \"../../stores/appStore/appStore\";\nimport { observer } from \"mobx-react\";\n\nexport const NetworkSwitcher = observer(() => {\n  return (\n    <div className={\"switcher-container\"}>\n      <div\n        onClick={() => (app.selectedNetwork = EVM_NETWORKS.BSC)}\n        className={\n          app.selectedNetwork === EVM_NETWORKS.BSC ? `col selected` : `col`\n        }\n      >\n        BSC\n      </div>\n      <div\n        onClick={() => (app.selectedNetwork = EVM_NETWORKS.ETHEREUM)}\n        className={\n          app.selectedNetwork === EVM_NETWORKS.ETHEREUM ? `col selected` : `col`\n        }\n      >\n        Ethereum\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { HomeViewModel } from \"./HomeViewModel\";\nimport { withStore } from \"../../utils/hoc\";\nimport \"./Home.sass\";\nimport { ConnectDialog } from \"../../components/dialogs/ConnectDialog\";\nimport { DisconnectDialog } from \"../../components/dialogs/DisconnectDialog\";\nimport { Header } from \"../../components/header/Header\";\nimport { Autocomplete } from \"../../components/autocomplete/Autocoplete\";\nimport { ExploreDapps } from \"../../components/explore-dapps/ExploreDapps\";\nimport { NetworkSwitcher } from \"../../components/network-switcher/NetworkSwitcher\";\n\nexport interface HomeScreenInterface {\n  store: HomeViewModel;\n}\n\nconst HomeImpl = ({ store: view }: HomeScreenInterface) => {\n  return (\n    <div className={\"container\"}>\n      <div className={\"main\"}>\n        <NetworkSwitcher />\n        <Header />\n        <Autocomplete />\n        <ExploreDapps />\n        <ConnectDialog />\n        <DisconnectDialog />\n      </div>\n    </div>\n  );\n};\n\nexport const Home = withStore(HomeViewModel, observer(HomeImpl));\n","const routes = {\r\n  home: {\r\n    path: \"/\",\r\n  }\r\n};\r\n\r\nexport default routes;","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <div className=\"home-card\"></div>;\r\n};\r\n\r\nexport default NotFound;\r\n","export default __webpack_public_path__ + \"static/media/close-icon.7fad7e62.svg\";","export default __webpack_public_path__ + \"static/media/arrow-down.b3b353fa.svg\";","import React, { useEffect, useState } from \"react\";\nimport closeIcon from \"../../static/images/close-icon.svg\";\n// @ts-ignore\nimport { Collapse } from \"react-collapse\";\nimport \"./index.sass\";\nimport arrowIcon from \"../../static/images/arrow-down.svg\";\nimport { IDapp } from \"../../data/all-dapps\";\nimport { app } from \"../../stores/appStore/appStore\";\n\nexport interface DappProps {\n  onClose?: (str: string) => any;\n  data: IDapp;\n  size?: string;\n  closable?: boolean;\n  position: number;\n}\n\nexport const Dapp: React.FC<DappProps> = ({\n  onClose: close,\n  data: { icon, url, description, name, title },\n  size,\n  closable,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [host, setHost] = useState(\"\");\n\n  useEffect(() => {\n    const site = new URL(url);\n    setHost(site.host);\n  }, [url]);\n\n  const renderDescription = (\n    description:\n      | boolean\n      | React.ReactChild\n      | React.ReactFragment\n      | React.ReactPortal\n      | null\n      | undefined\n  ) => {\n    return (\n      description && (\n        <div>\n          {/*<div className={ 'dapp-border' }/>*/}\n          <p className={\"dapp-desc\"}>{description}</p>\n        </div>\n      )\n    );\n  };\n\n  const onClose = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    if (close) {\n      close(url);\n    }\n  };\n\n  return (\n    <div className={\"dapp\"}>\n      <div\n        className={\"row\"}\n        onClick={(e) => {\n          e.stopPropagation();\n          app.alert.displayAlert = true;\n          app.alert.alertMessage = \"Link copied\";\n          console.log(\"ASDASDSA\");\n        }}\n      >\n        {title && <p className={\"title\"}>{title}</p>}\n      </div>\n      <div className={\"row\"}>\n        <div className={\"column\"}>\n          <img\n            src={icon}\n            className={`dapp-logo ${size === \"small\" ? \"dapp-logo-small\" : \"\"}`}\n            alt={`${name} logo`}\n          />\n        </div>\n        <div\n          className={\"column grow\"}\n          onClick={() => (window.location.href = url)}\n        >\n          <div className={\"dapp-row\"}>\n            <div className=\"dapp-content\">\n              <p\n                className={`dapp-name ${\n                  size === \"small\" ? \"dapp-name-small\" : \"\"\n                }`}\n              >\n                {name}\n              </p>\n              {description ? renderDescription(description) : null}\n            </div>\n            {closable && (\n              <button className={\"dapp-close\"} onClick={onClose}>\n                <img src={closeIcon} alt={\"close button\"} />\n              </button>\n            )}\n          </div>\n          <div className={\"dapp-row\"}>\n            <Collapse isOpened={isOpen}>\n              <a href={url} className={\"dapp-url\"}>\n                {host}\n              </a>\n            </Collapse>\n          </div>\n        </div>\n        <div className={\"column center\"} onClick={() => setIsOpen(!isOpen)}>\n          <img src={arrowIcon} className={`arrow ${!isOpen ? \"rotate\" : \"\"}`} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/back-icon.8f957f1b.svg\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport backIcon from \"../../static/images/back-icon.svg\";\nimport \"./index.sass\";\n\nexport const Navbar = ({ title }: { title: string }) => {\n  return (\n    <div className={\"navbar\"}>\n      <Link to={\"/\"} className={\"navbar-back\"}>\n        <img src={backIcon} alt={\"go back\"} />\n      </Link>\n      <h1>{title}</h1>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport allDapps, { IDappCategory } from \"../../data/all-dapps\";\nimport { Dapp } from \"../../components/dapp/Dapp\";\nimport { useParams } from \"react-router-dom\";\nimport { Navbar } from \"../../components/navbar/Navbar\";\nimport \"./index.sass\";\nimport { app, EVM_NETWORKS } from \"../../stores/appStore/appStore\";\nimport { observer } from \"mobx-react\";\n\nexport const Category = observer(() => {\n  const [category, setCategory] = useState<IDappCategory>();\n  const params = useParams();\n\n  const updateCategory = () => {\n    const cat = allDapps.find((cat) => {\n      return cat.name.toLowerCase().replace(\" \", \"-\") === params.category;\n    });\n\n    if (JSON.stringify(category) !== JSON.stringify(cat)) {\n      console.log({ cat });\n      setCategory(cat);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"open-category\");\n    updateCategory();\n  }, []);\n\n  if (!category) {\n    return null;\n  }\n  return (\n    <div className={\"category-container\"}>\n      <Navbar title={category?.name} />\n      <div className={\"category-wrapper\"}>\n        {category.dapps\n          .filter((c) =>\n            app.selectedNetwork === EVM_NETWORKS.BSC ? c.isBSC : c.isEth\n          )\n          .map((dapp, i) => (\n            <Dapp data={dapp} key={dapp.url} position={i} />\n          ))}\n      </div>\n    </div>\n  );\n});\n","import React, { useEffect } from \"react\";\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { Home } from \"./screens/home/Home\";\nimport \"./App.sass\";\nimport routes from \"./utils/routes\";\nimport NotFound from \"./screens/404/404\";\nimport b from \"buffer\";\nimport { observer } from \"mobx-react\";\nimport { ProviderStore } from \"./stores/providerStore\";\nimport { AlertProps, Snackbar } from \"@mui/material\";\nimport { app } from \"./stores/appStore/appStore\";\nimport MuiAlert from \"@mui/material/Alert\";\n// @ts-ignore\nimport { AnimatedRoute } from \"react-router-transition\";\nimport { Category } from \"./screens/category/Category\";\nimport Done from \"./static/images/done.svg\";\n\nwindow.Buffer = b.Buffer;\n\nexport const getProviderStore = new ProviderStore();\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n  props,\n  ref\n) {\n  return (\n    <MuiAlert\n      sx={{ borderColor: \"white\" }}\n      elevation={6}\n      ref={ref}\n      variant=\"outlined\"\n      {...props}\n    />\n  );\n});\n\nexport const App = observer(() => {\n  useEffect(() => {\n    (async () => {\n      await getProviderStore.init();\n    })();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {getProviderStore.initialized ? (\n        <Router>\n          <Routes>\n            <Route path={routes.home.path} element={<Home />} />\n            <Route path=\"*\" element={<NotFound />} />\n            <Route path=\"/:category\" element={<Category />} />\n          </Routes>\n        </Router>\n      ) : null}\n      <Snackbar\n        open={app.alert.displayAlert}\n        autoHideDuration={6000}\n        onClose={app.alert.alertClose}\n        style={{ backgroundColor: \"white\" }}\n      >\n        <Alert\n          onClose={app.alert.alertClose}\n          severity=\"success\"\n          sx={{ width: \"100%\" }}\n          icon={false}\n        >\n          <img className={\"alert-img\"} src={\"./images/done.svg\"} />\n          {app.alert.alertMessage}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n});\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.sass\";\r\nimport \"./translations/i18n\";\r\nimport { App } from \"./App\";\r\nimport { configure } from \"mobx\";\r\n\r\nconfigure({\r\n  enforceActions: \"never\",\r\n});\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","class Logcat {\r\n  static log(...args: any[]) {\r\n    console.log(...args);\r\n  }\r\n\r\n  static debug(...args: any[]) {\r\n    console.debug(...args);\r\n  }\r\n\r\n  static error(msg: any, err: any, ...optionalParams: any[]) {\r\n    console.error(msg, err, optionalParams);\r\n  }\r\n\r\n  static info(...args: any[]) {\r\n    console.info(...args);\r\n  }\r\n\r\n  static warning(msg: any, ...optionalParams: any[]) {\r\n    console.warn(msg, optionalParams);\r\n  }\r\n}\r\n\r\nexport default Logcat;\r\n","import { makeAutoObservable } from \"mobx\";\nimport Logcat from \"../utils/logcat\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { rpc } from \"../constants/api\";\nimport { getProviderStore } from \"../App\";\n\nexport enum PROVIDERS {\n  WEB3 = \"WEB3\",\n  WC = \"WC\",\n}\n\nexport class ProviderStore {\n  initialized = false;\n  currentAccount: any = null;\n  hasProvider = false;\n  currentProvider: any;\n  chainId: number;\n  connectDialog = false;\n  disconnectDialog = false;\n  connectedProvider: PROVIDERS;\n\n  constructor() {\n    makeAutoObservable(this, undefined, { autoBind: true });\n  }\n\n  setProvider = async (type: PROVIDERS) => {\n    try {\n      switch (type) {\n        case PROVIDERS.WC:\n          const provider = new WalletConnectProvider({ rpc });\n          const result = await provider.enable();\n          this.currentAccount = result[0];\n          this.currentProvider = provider;\n          await this.initProvider();\n          break;\n        case PROVIDERS.WEB3:\n        default:\n          this.currentProvider = window.ethereum;\n          await this.initProvider();\n          await this.connectToWeb3();\n      }\n      this.connectedProvider = type;\n      localStorage.setItem(\"connected\", type);\n      this.connectDialog = false;\n    } catch (e) {\n      Logcat.error(\"ERROR\", e);\n    }\n  };\n\n  initProvider = async () => {\n    if (!this.currentProvider) return;\n    this.currentProvider.on(\"accountsChanged\", (accounts: any) => {\n      this.currentAccount = accounts[0];\n    });\n\n    this.currentProvider.on(\"disconnect\", () => {\n      Logcat.info(\"disconnect\");\n      this.currentAccount = null;\n    });\n\n    this.currentProvider.on(\"connect\", (accounts: any) => {\n      this.currentAccount = accounts[0];\n    });\n\n    this.currentProvider.on(\"chainChanged\", (chainId: number) => {\n      Logcat.log({ chainId });\n      this.chainId = chainId;\n    });\n\n    this.currentProvider.on(\"message\", (payload: any) => {\n      Logcat.info(\"message\", payload);\n    });\n  };\n\n  init = async () => {\n    this.initialized = true;\n    const provider = localStorage.getItem(\"connected\");\n    if (provider) {\n      await this.setProvider(provider as PROVIDERS);\n    }\n  };\n\n  connectToWeb3 = async () => {\n    try {\n      const accounts = await this.currentProvider.request({\n        method: \"eth_requestAccounts\",\n      });\n      this.currentAccount = accounts[0];\n    } catch (e) {\n      Logcat.info(\"ERROR\", e);\n    }\n  };\n\n  personalMessageRequest = (message: any): any => {\n    if (!this.currentProvider) return null;\n\n    return this.currentProvider.request({\n      method: \"personal_sign\",\n      params: [\n        `0x${Buffer.from(message, \"utf-8\").toString(\"hex\")}`,\n        this.currentAccount,\n      ],\n    });\n  };\n\n  connect = async () => {\n    if (!this.currentProvider || this.currentProvider?.currentAccount) return;\n    try {\n      const accounts = await this.currentProvider.request({\n        method: \"eth_requestAccounts\",\n      });\n      this.currentAccount = accounts[0];\n    } catch (e) {\n      Logcat.info(\"ERROR\", e);\n    }\n  };\n  disconnect = () => {\n    this.currentAccount = null;\n    this.disconnectDialog = false;\n    try {\n      localStorage.removeItem(\"connected\");\n      localStorage.removeItem(\"walletconnect\");\n    } catch (e) {\n      Logcat.error(\"ERROR\", e);\n    }\n  };\n  toggleConnectDialog = () => {\n    this.connectDialog = !this.connectDialog;\n  };\n  toggleDisconnectDialog = () => {\n    this.disconnectDialog = !this.disconnectDialog;\n  };\n}\n"],"sourceRoot":""}